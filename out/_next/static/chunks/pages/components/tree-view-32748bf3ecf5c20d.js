(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7574],{83753:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tree-view",function(){return o(93862)}])},92223:function(e,n,o){"use strict";o.d(n,{Z:function(){return S}});var t=o(85893),l=o(67294),r=o(87357),d=o(66242),i=o(34386),a=o(67720),c=o(57922),s=o(93946),m=o(78445),I=o(44267),p=o(96420),x=o(98396),h=o(33454),u=o(63730),T=o(15660),b=o.n(T),g=o(86501),f=o(66485),j=o.n(f);let w=e=>e&&("TEXTAREA"===e.nodeName||"INPUT"===e.nodeName);var y=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=(0,l.useRef)(null),o=()=>{e.onSuccess&&e.onSuccess(),e.selectOnCopy&&w(n.current)&&n.current.select()},t=()=>{e.onError&&e.onError();let o=!1!==e.selectOnError;o&&w(n.current)&&n.current.select()},r=e=>{j()(e).then(o).catch(t)},d=(0,l.useCallback)(e=>{"string"==typeof e?r(e):n.current&&r(n.current.value)},[]);return{copy:d,target:n}};let Z=e=>{let{id:n,sx:o,code:T,title:f,children:j,className:w}=e,[Z,S]=(0,l.useState)(!1),[v,C]=(0,l.useState)(null!==T.tsx?"tsx":"jsx"),V=y(),E=(0,x.Z)(e=>e.breakpoints.down("md"));(0,l.useEffect)(()=>{b().highlightAll()},[Z,v]);let M=()=>null!==T.tsx&&"tsx"===v?T.tsx.props.children.props.children:null!==T.jsx&&"jsx"===v?T.jsx.props.children.props.children:"",N=()=>{V.copy(M()),g.ZP.success("The source code has been copied to your clipboard.",{duration:2e3})};return(0,t.jsxs)(d.Z,{className:w,sx:{"& .MuiCardHeader-action":{lineHeight:.8},...o},id:n||"card-snippet--".concat(f.toLowerCase().replace(/ /g,"-")),children:[(0,t.jsx)(m.Z,{title:f,...E?{}:{action:(0,t.jsx)(s.Z,{onClick:()=>S(!Z),children:(0,t.jsx)(u.Z,{icon:"mdi:code-tags",fontSize:20})})}}),(0,t.jsx)(I.Z,{children:j}),E?null:(0,t.jsxs)(c.Z,{in:Z,children:[(0,t.jsx)(a.Z,{sx:{my:"0 !important"}}),(0,t.jsxs)(I.Z,{sx:{position:"relative","& pre":{m:"0 !important",maxHeight:500}},children:[(0,t.jsx)(r.Z,{sx:{mb:4,display:"flex",alignItems:"center",justifyContent:"flex-end"},children:(0,t.jsxs)(h.Z,{exclusive:!0,size:"small",color:"primary",value:v,onChange:(e,n)=>null!==n?C(n):null,children:[null!==T.tsx?(0,t.jsx)(p.Z,{value:"tsx",children:(0,t.jsx)(u.Z,{icon:"mdi:language-typescript",fontSize:20})}):null,null!==T.jsx?(0,t.jsx)(p.Z,{value:"jsx",children:(0,t.jsx)(u.Z,{icon:"mdi:language-javascript",fontSize:20})}):null]})}),(0,t.jsx)(i.Z,{title:"Copy the source",placement:"top",children:(0,t.jsx)(s.Z,{onClick:N,sx:{top:"5rem",color:"grey.100",right:"2.5625rem",position:"absolute"},children:(0,t.jsx)(u.Z,{icon:"mdi:content-copy",fontSize:20})})}),(0,t.jsx)("div",{children:null!==T[v]?T[v]:null})]})]})]})};var S=Z},93862:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return O}});var t=o(85893),l=o(86886),r=o(15861),d=o(92223),i=o(23918),a=o(4707),c=o(26452),s=o(63730);let m=e=>{let{direction:n}=e;return(0,t.jsxs)(a.Z,{sx:{minHeight:240},defaultExpandIcon:(0,t.jsx)(s.Z,{icon:"rtl"===n?"mdi:chevron-left":"mdi:chevron-right"}),defaultCollapseIcon:(0,t.jsx)(s.Z,{icon:"mdi:chevron-down"}),children:[(0,t.jsxs)(c.Z,{nodeId:"1",label:"Applications",children:[(0,t.jsx)(c.Z,{nodeId:"2",label:"Calendar"}),(0,t.jsx)(c.Z,{nodeId:"3",label:"Chrome"}),(0,t.jsx)(c.Z,{nodeId:"4",label:"Webstorm"})]}),(0,t.jsxs)(c.Z,{nodeId:"5",label:"Documents",children:[(0,t.jsx)(c.Z,{nodeId:"10",label:"OSS"}),(0,t.jsx)(c.Z,{nodeId:"6",label:"MUI",children:(0,t.jsxs)(c.Z,{nodeId:"7",label:"src",children:[(0,t.jsx)(c.Z,{nodeId:"8",label:"index.js"}),(0,t.jsx)(c.Z,{nodeId:"9",label:"tree-view.js"})]})})]})]})};var I=o(67294);let p=e=>{let{direction:n}=e,[o,l]=(0,I.useState)([]),[r,d]=(0,I.useState)([]),i=(e,n)=>{l(n)},m=(e,n)=>{d(n)};return(0,t.jsxs)(a.Z,{expanded:o,selected:r,sx:{minHeight:240},onNodeToggle:i,onNodeSelect:m,defaultExpandIcon:(0,t.jsx)(s.Z,{icon:"rtl"===n?"mdi:chevron-left":"mdi:chevron-right"}),defaultCollapseIcon:(0,t.jsx)(s.Z,{icon:"mdi:chevron-down"}),children:[(0,t.jsxs)(c.Z,{nodeId:"1",label:"Applications",children:[(0,t.jsx)(c.Z,{nodeId:"2",label:"Calendar"}),(0,t.jsx)(c.Z,{nodeId:"3",label:"Chrome"}),(0,t.jsx)(c.Z,{nodeId:"4",label:"Webstorm"})]}),(0,t.jsxs)(c.Z,{nodeId:"5",label:"Documents",children:[(0,t.jsx)(c.Z,{nodeId:"10",label:"OSS"}),(0,t.jsx)(c.Z,{nodeId:"6",label:"MUI",children:(0,t.jsxs)(c.Z,{nodeId:"7",label:"src",children:[(0,t.jsx)(c.Z,{nodeId:"8",label:"index.js"}),(0,t.jsx)(c.Z,{nodeId:"9",label:"tree-view.js"})]})})]})]})},x={id:"root",name:"Parent",children:[{id:"1",name:"Child - 1"},{id:"3",name:"Child - 3",children:[{id:"4",name:"Child - 4"}]}]},h=e=>{let{direction:n}=e,o=e=>(0,t.jsx)(c.Z,{nodeId:e.id,label:e.name,children:Array.isArray(e.children)?e.children.map(e=>o(e)):null},e.id);return(0,t.jsx)(a.Z,{sx:{minHeight:240},defaultExpanded:["root"],defaultExpandIcon:(0,t.jsx)(s.Z,{icon:"rtl"===n?"mdi:chevron-left":"mdi:chevron-right"}),defaultCollapseIcon:(0,t.jsx)(s.Z,{icon:"mdi:chevron-down"}),children:o(x)})};var u=o(90948),T=o(41796);let b=(0,u.ZP)(a.Z)(e=>{let{theme:n}=e;return{minHeight:264,"& .MuiTreeItem-iconContainer .close":{opacity:.3},"& .MuiTreeItem-group":{marginLeft:15,paddingLeft:18,borderLeft:"1px dashed ".concat((0,T.Fq)(n.palette.text.primary,.4))}}}),g=()=>(0,t.jsx)(b,{defaultExpanded:["1"],defaultExpandIcon:(0,t.jsx)(s.Z,{icon:"mdi:plus-box-outline"}),defaultCollapseIcon:(0,t.jsx)(s.Z,{icon:"mdi:minus-box-outline"}),defaultEndIcon:(0,t.jsx)(s.Z,{icon:"mdi:close-box-outline",className:"close"}),children:(0,t.jsxs)(c.Z,{nodeId:"1",label:"Main",children:[(0,t.jsx)(c.Z,{nodeId:"2",label:"Hello"}),(0,t.jsxs)(c.Z,{nodeId:"3",label:"Subtree with children",children:[(0,t.jsx)(c.Z,{nodeId:"6",label:"Hello"}),(0,t.jsxs)(c.Z,{nodeId:"7",label:"Sub-subtree with children",children:[(0,t.jsx)(c.Z,{nodeId:"9",label:"Child 1"}),(0,t.jsx)(c.Z,{nodeId:"10",label:"Child 2"}),(0,t.jsx)(c.Z,{nodeId:"11",label:"Child 3"})]}),(0,t.jsx)(c.Z,{nodeId:"8",label:"Hello"})]}),(0,t.jsx)(c.Z,{nodeId:"4",label:"World"}),(0,t.jsx)(c.Z,{nodeId:"5",label:"Something something"})]})});var f=o(87357);let j=(0,u.ZP)(c.Z)(e=>{let{theme:n}=e;return{"&:hover > .MuiTreeItem-content:not(.Mui-selected)":{backgroundColor:n.palette.action.hover},"& .MuiTreeItem-content":{paddingRight:n.spacing(3),borderTopRightRadius:n.spacing(4),borderBottomRightRadius:n.spacing(4),fontWeight:n.typography.fontWeightMedium},"& .MuiTreeItem-label":{fontWeight:"inherit",paddingRight:n.spacing(3)},"& .MuiTreeItem-group":{marginLeft:0,"& .MuiTreeItem-content":{paddingLeft:n.spacing(4),fontWeight:n.typography.fontWeightRegular}}}}),w=e=>{let{labelText:n,labelIcon:o,labelInfo:l,...d}=e;return(0,t.jsx)(j,{...d,label:(0,t.jsxs)(f.Z,{sx:{py:1,display:"flex",alignItems:"center","& svg":{mr:1}},children:[(0,t.jsx)(s.Z,{icon:o,color:"inherit"}),(0,t.jsx)(r.Z,{variant:"body2",sx:{flexGrow:1,fontWeight:"inherit"},children:n}),l?(0,t.jsx)(r.Z,{variant:"caption",color:"inherit",children:l}):null]})})},y=e=>{let{direction:n}=e,o=(0,t.jsx)(s.Z,{icon:"rtl"===n?"mdi:chevron-left":"mdi:chevron-right"});return(0,t.jsxs)(a.Z,{sx:{minHeight:240},defaultExpanded:["3"],defaultExpandIcon:o,defaultCollapseIcon:(0,t.jsx)(s.Z,{icon:"mdi:chevron-down"}),children:[(0,t.jsx)(w,{nodeId:"1",labelText:"All Mail",labelIcon:"mdi:email-outline"}),(0,t.jsx)(w,{nodeId:"2",labelText:"Trash",labelIcon:"mdi:delete-outline"}),(0,t.jsxs)(w,{nodeId:"3",labelText:"Categories",labelIcon:"mdi:label-outline",children:[(0,t.jsx)(w,{nodeId:"5",labelInfo:"90",labelText:"Social",labelIcon:"mdi:account-supervisor-outline"}),(0,t.jsx)(w,{nodeId:"6",labelInfo:"2,294",labelText:"Updates",labelIcon:"mdi:information-outline"}),(0,t.jsx)(w,{nodeId:"7",labelInfo:"3,566",labelText:"Forums",labelIcon:"mdi:forum-outline"}),(0,t.jsx)(w,{nodeId:"8",labelInfo:"733",labelText:"Promotions",labelIcon:"mdi:tag-outline"})]}),(0,t.jsx)(w,{nodeId:"4",labelText:"History",labelIcon:"mdi:label-outline"})]})},Z=e=>{let{direction:n}=e;return(0,t.jsxs)(a.Z,{multiSelect:!0,sx:{minHeight:240},defaultExpandIcon:(0,t.jsx)(s.Z,{icon:"rtl"===n?"mdi:chevron-left":"mdi:chevron-right"}),defaultCollapseIcon:(0,t.jsx)(s.Z,{icon:"mdi:chevron-down"}),children:[(0,t.jsxs)(c.Z,{nodeId:"1",label:"Applications",children:[(0,t.jsx)(c.Z,{nodeId:"2",label:"Calendar"}),(0,t.jsx)(c.Z,{nodeId:"3",label:"Chrome"}),(0,t.jsx)(c.Z,{nodeId:"4",label:"Webstorm"})]}),(0,t.jsxs)(c.Z,{nodeId:"5",label:"Documents",children:[(0,t.jsx)(c.Z,{nodeId:"10",label:"OSS"}),(0,t.jsx)(c.Z,{nodeId:"6",label:"MUI",children:(0,t.jsxs)(c.Z,{nodeId:"7",label:"src",children:[(0,t.jsx)(c.Z,{nodeId:"8",label:"index.js"}),(0,t.jsx)(c.Z,{nodeId:"9",label:"tree-view.js"})]})})]})]})},S=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst TreeViewBasic = ({ direction }) => {\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      sx={{ minHeight: 240 }}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <TreeItem nodeId='1' label='Applications'>\n        <TreeItem nodeId='2' label='Calendar' />\n        <TreeItem nodeId='3' label='Chrome' />\n        <TreeItem nodeId='4' label='Webstorm' />\n      </TreeItem>\n      <TreeItem nodeId='5' label='Documents'>\n        <TreeItem nodeId='10' label='OSS' />\n        <TreeItem nodeId='6' label='MUI'>\n          <TreeItem nodeId='7' label='src'>\n            <TreeItem nodeId='8' label='index.js' />\n            <TreeItem nodeId='9' label='tree-view.js' />\n          </TreeItem>\n        </TreeItem>\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewBasic\n"})}),v=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeItem from '@mui/lab/TreeItem'\nimport { alpha, styled } from '@mui/material/styles'\nimport MuiTreeView from '@mui/lab/TreeView'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\n// Styled TreeView component\nconst TreeView = styled(MuiTreeView)(({ theme }) => ({\n  minHeight: 264,\n  '& .MuiTreeItem-iconContainer .close': {\n    opacity: 0.3\n  },\n  '& .MuiTreeItem-group': {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: 1px dashed {alpha(theme.palette.text.primary, 0.4)}\n  }\n}))\n\nconst TreeViewCustomized = () => {\n  return (\n    <TreeView\n      defaultExpanded={['1']}\n      defaultExpandIcon={<Icon icon='mdi:plus-box-outline' />}\n      defaultCollapseIcon={<Icon icon='mdi:minus-box-outline' />}\n      defaultEndIcon={<Icon icon='mdi:close-box-outline' className='close' />}\n    >\n      <TreeItem nodeId='1' label='Main'>\n        <TreeItem nodeId='2' label='Hello' />\n        <TreeItem nodeId='3' label='Subtree with children'>\n          <TreeItem nodeId='6' label='Hello' />\n          <TreeItem nodeId='7' label='Sub-subtree with children'>\n            <TreeItem nodeId='9' label='Child 1' />\n            <TreeItem nodeId='10' label='Child 2' />\n            <TreeItem nodeId='11' label='Child 3' />\n          </TreeItem>\n          <TreeItem nodeId='8' label='Hello' />\n        </TreeItem>\n        <TreeItem nodeId='4' label='World' />\n        <TreeItem nodeId='5' label='Something something' />\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewCustomized\n"})}),C=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TreeView from '@mui/lab/TreeView'\nimport { styled } from '@mui/material/styles'\nimport Typography from '@mui/material/Typography'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Custom Icon Import\nimport Icon from 'src/@core/components/icon'\n\n// Styled TreeItem component\nconst StyledTreeItemRoot = styled(TreeItem)(({ theme }) => ({\n  '&:hover > .MuiTreeItem-content:not(.Mui-selected)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  '& .MuiTreeItem-content': {\n    paddingRight: theme.spacing(3),\n    borderTopRightRadius: theme.spacing(4),\n    borderBottomRightRadius: theme.spacing(4),\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  '& .MuiTreeItem-label': {\n    fontWeight: 'inherit',\n    paddingRight: theme.spacing(3)\n  },\n  '& .MuiTreeItem-group': {\n    marginLeft: 0,\n    '& .MuiTreeItem-content': {\n      paddingLeft: theme.spacing(4),\n      fontWeight: theme.typography.fontWeightRegular\n    }\n  }\n}))\n\nconst StyledTreeItem = props => {\n  // ** Props\n  const { labelText, labelIcon, labelInfo, ...other } = props\n\n  return (\n    <StyledTreeItemRoot\n      {...other}\n      label={\n        <Box sx={{ py: 1, display: 'flex', alignItems: 'center', '& svg': { mr: 1 } }}>\n          <Icon icon={labelIcon} color='inherit' />\n          <Typography variant='body2' sx={{ flexGrow: 1, fontWeight: 'inherit' }}>\n            {labelText}\n          </Typography>\n          {labelInfo ? (\n            <Typography variant='caption' color='inherit'>\n              {labelInfo}\n            </Typography>\n          ) : null}\n        </Box>\n      }\n    />\n  )\n}\n\nconst TreeViewGmailClone = ({ direction }) => {\n  const ExpandIcon = <Icon icon={direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'} />\n\n  return (\n    <TreeView\n      sx={{ minHeight: 240 }}\n      defaultExpanded={['3']}\n      defaultExpandIcon={ExpandIcon}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <StyledTreeItem nodeId='1' labelText='All Mail' labelIcon='mdi:email-outline' />\n      <StyledTreeItem nodeId='2' labelText='Trash' labelIcon='mdi:delete-outline' />\n      <StyledTreeItem nodeId='3' labelText='Categories' labelIcon='mdi:label-outline'>\n        <StyledTreeItem nodeId='5' labelInfo='90' labelText='Social' labelIcon='mdi:account-supervisor-outline' />\n        <StyledTreeItem nodeId='6' labelInfo='2,294' labelText='Updates' labelIcon='mdi:information-outline' />\n        <StyledTreeItem nodeId='7' labelInfo='3,566' labelText='Forums' labelIcon='mdi:forum-outline' />\n        <StyledTreeItem nodeId='8' labelInfo='733' labelText='Promotions' labelIcon='mdi:tag-outline' />\n      </StyledTreeItem>\n      <StyledTreeItem nodeId='4' labelText='History' labelIcon='mdi:label-outline' />\n    </TreeView>\n  )\n}\n\nexport default TreeViewGmailClone\n"})}),V=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst TreeViewMultiSelection = ({ direction }) => {\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      multiSelect\n      sx={{ minHeight: 240 }}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <TreeItem nodeId='1' label='Applications'>\n        <TreeItem nodeId='2' label='Calendar' />\n        <TreeItem nodeId='3' label='Chrome' />\n        <TreeItem nodeId='4' label='Webstorm' />\n      </TreeItem>\n      <TreeItem nodeId='5' label='Documents'>\n        <TreeItem nodeId='10' label='OSS' />\n        <TreeItem nodeId='6' label='MUI'>\n          <TreeItem nodeId='7' label='src'>\n            <TreeItem nodeId='8' label='index.js' />\n            <TreeItem nodeId='9' label='tree-view.js' />\n          </TreeItem>\n        </TreeItem>\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewMultiSelection\n"})}),E=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst data = {\n  id: 'root',\n  name: 'Parent',\n  children: [\n    {\n      id: '1',\n      name: 'Child - 1'\n    },\n    {\n      id: '3',\n      name: 'Child - 3',\n      children: [\n        {\n          id: '4',\n          name: 'Child - 4'\n        }\n      ]\n    }\n  ]\n}\n\nconst TreeViewRichObject = ({ direction }) => {\n  const renderTree = nodes => (\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\n      {Array.isArray(nodes.children) ? nodes.children.map(node => renderTree(node)) : null}\n    </TreeItem>\n  )\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      sx={{ minHeight: 240 }}\n      defaultExpanded={['root']}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      {renderTree(data)}\n    </TreeView>\n  )\n}\n\nexport default TreeViewRichObject\n"})}),M=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst TreeViewControlled = ({ direction }) => {\n  // ** States\n  const [expanded, setExpanded] = useState([])\n  const [selected, setSelected] = useState([])\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds)\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds)\n  }\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      expanded={expanded}\n      selected={selected}\n      sx={{ minHeight: 240 }}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <TreeItem nodeId='1' label='Applications'>\n        <TreeItem nodeId='2' label='Calendar' />\n        <TreeItem nodeId='3' label='Chrome' />\n        <TreeItem nodeId='4' label='Webstorm' />\n      </TreeItem>\n      <TreeItem nodeId='5' label='Documents'>\n        <TreeItem nodeId='10' label='OSS' />\n        <TreeItem nodeId='6' label='MUI'>\n          <TreeItem nodeId='7' label='src'>\n            <TreeItem nodeId='8' label='index.js' />\n            <TreeItem nodeId='9' label='tree-view.js' />\n          </TreeItem>\n        </TreeItem>\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewControlled\n"})}),N=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeItem from '@mui/lab/TreeItem'\nimport { alpha, styled } from '@mui/material/styles'\nimport MuiTreeView, { TreeViewProps } from '@mui/lab/TreeView'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\n// Styled TreeView component\nconst TreeView = styled(MuiTreeView)<TreeViewProps>(({ theme }) => ({\n  minHeight: 264,\n  '& .MuiTreeItem-iconContainer .close': {\n    opacity: 0.3\n  },\n  '& .MuiTreeItem-group': {\n    marginLeft: 15,\n    paddingLeft: 18,\n    borderLeft: 1px dashed {alpha(theme.palette.text.primary, 0.4)}\n  }\n}))\n\nconst TreeViewCustomized = () => {\n  return (\n    <TreeView\n      defaultExpanded={['1']}\n      defaultExpandIcon={<Icon icon='mdi:plus-box-outline' />}\n      defaultCollapseIcon={<Icon icon='mdi:minus-box-outline' />}\n      defaultEndIcon={<Icon icon='mdi:close-box-outline' className='close' />}\n    >\n      <TreeItem nodeId='1' label='Main'>\n        <TreeItem nodeId='2' label='Hello' />\n        <TreeItem nodeId='3' label='Subtree with children'>\n          <TreeItem nodeId='6' label='Hello' />\n          <TreeItem nodeId='7' label='Sub-subtree with children'>\n            <TreeItem nodeId='9' label='Child 1' />\n            <TreeItem nodeId='10' label='Child 2' />\n            <TreeItem nodeId='11' label='Child 3' />\n          </TreeItem>\n          <TreeItem nodeId='8' label='Hello' />\n        </TreeItem>\n        <TreeItem nodeId='4' label='World' />\n        <TreeItem nodeId='5' label='Something something' />\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewCustomized\n"})}),P=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { SyntheticEvent, useState } from 'react'\n\n// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\ninterface Props {\n  direction: 'ltr' | 'rtl'\n}\n\nconst TreeViewControlled = ({ direction }: Props) => {\n  // ** States\n  const [expanded, setExpanded] = useState<string[]>([])\n  const [selected, setSelected] = useState<string[]>([])\n\n  const handleToggle = (event: SyntheticEvent, nodeIds: string[]) => {\n    setExpanded(nodeIds)\n  }\n\n  const handleSelect = (event: SyntheticEvent, nodeIds: string[]) => {\n    setSelected(nodeIds)\n  }\n\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      expanded={expanded}\n      selected={selected}\n      sx={{ minHeight: 240 }}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <TreeItem nodeId='1' label='Applications'>\n        <TreeItem nodeId='2' label='Calendar' />\n        <TreeItem nodeId='3' label='Chrome' />\n        <TreeItem nodeId='4' label='Webstorm' />\n      </TreeItem>\n      <TreeItem nodeId='5' label='Documents'>\n        <TreeItem nodeId='10' label='OSS' />\n        <TreeItem nodeId='6' label='MUI'>\n          <TreeItem nodeId='7' label='src'>\n            <TreeItem nodeId='8' label='index.js' />\n            <TreeItem nodeId='9' label='tree-view.js' />\n          </TreeItem>\n        </TreeItem>\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewControlled\n"})}),R=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\ninterface Props {\n  direction: 'ltr' | 'rtl'\n}\n\nconst TreeViewBasic = ({ direction }: Props) => {\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      sx={{ minHeight: 240 }}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <TreeItem nodeId='1' label='Applications'>\n        <TreeItem nodeId='2' label='Calendar' />\n        <TreeItem nodeId='3' label='Chrome' />\n        <TreeItem nodeId='4' label='Webstorm' />\n      </TreeItem>\n      <TreeItem nodeId='5' label='Documents'>\n        <TreeItem nodeId='10' label='OSS' />\n        <TreeItem nodeId='6' label='MUI'>\n          <TreeItem nodeId='7' label='src'>\n            <TreeItem nodeId='8' label='index.js' />\n            <TreeItem nodeId='9' label='tree-view.js' />\n          </TreeItem>\n        </TreeItem>\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewBasic\n"})}),H=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\ninterface Props {\n  direction: 'ltr' | 'rtl'\n}\n\ninterface RenderTree {\n  id: string\n  name: string\n  children?: RenderTree[]\n}\n\nconst data: RenderTree = {\n  id: 'root',\n  name: 'Parent',\n  children: [\n    {\n      id: '1',\n      name: 'Child - 1'\n    },\n    {\n      id: '3',\n      name: 'Child - 3',\n      children: [\n        {\n          id: '4',\n          name: 'Child - 4'\n        }\n      ]\n    }\n  ]\n}\n\nconst TreeViewRichObject = ({ direction }: Props) => {\n  const renderTree = (nodes: RenderTree) => (\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\n      {Array.isArray(nodes.children) ? nodes.children.map(node => renderTree(node)) : null}\n    </TreeItem>\n  )\n\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      sx={{ minHeight: 240 }}\n      defaultExpanded={['root']}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      {renderTree(data)}\n    </TreeView>\n  )\n}\n\nexport default TreeViewRichObject\n"})}),W=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\ninterface Props {\n  direction: 'ltr' | 'rtl'\n}\n\nconst TreeViewMultiSelection = ({ direction }: Props) => {\n  const ExpandIcon = direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'\n\n  return (\n    <TreeView\n      multiSelect\n      sx={{ minHeight: 240 }}\n      defaultExpandIcon={<Icon icon={ExpandIcon} />}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <TreeItem nodeId='1' label='Applications'>\n        <TreeItem nodeId='2' label='Calendar' />\n        <TreeItem nodeId='3' label='Chrome' />\n        <TreeItem nodeId='4' label='Webstorm' />\n      </TreeItem>\n      <TreeItem nodeId='5' label='Documents'>\n        <TreeItem nodeId='10' label='OSS' />\n        <TreeItem nodeId='6' label='MUI'>\n          <TreeItem nodeId='7' label='src'>\n            <TreeItem nodeId='8' label='index.js' />\n            <TreeItem nodeId='9' label='tree-view.js' />\n          </TreeItem>\n        </TreeItem>\n      </TreeItem>\n    </TreeView>\n  )\n}\n\nexport default TreeViewMultiSelection\n"})}),U=(0,t.jsx)("pre",{className:"language-jsx",children:(0,t.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TreeView from '@mui/lab/TreeView'\nimport { styled } from '@mui/material/styles'\nimport Typography from '@mui/material/Typography'\nimport TreeItem, { TreeItemProps } from '@mui/lab/TreeItem'\n\n// ** Custom Icon Import\nimport Icon from 'src/@core/components/icon'\n\ninterface Props {\n  direction: 'ltr' | 'rtl'\n}\n\ntype StyledTreeItemProps = TreeItemProps & {\n  labelText: string\n  labelIcon: string\n  labelInfo?: string\n}\n\n// Styled TreeItem component\nconst StyledTreeItemRoot = styled(TreeItem)<TreeItemProps>(({ theme }) => ({\n  '&:hover > .MuiTreeItem-content:not(.Mui-selected)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  '& .MuiTreeItem-content': {\n    paddingRight: theme.spacing(3),\n    borderTopRightRadius: theme.spacing(4),\n    borderBottomRightRadius: theme.spacing(4),\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  '& .MuiTreeItem-label': {\n    fontWeight: 'inherit',\n    paddingRight: theme.spacing(3)\n  },\n  '& .MuiTreeItem-group': {\n    marginLeft: 0,\n    '& .MuiTreeItem-content': {\n      paddingLeft: theme.spacing(4),\n      fontWeight: theme.typography.fontWeightRegular\n    }\n  }\n}))\n\nconst StyledTreeItem = (props: StyledTreeItemProps) => {\n  // ** Props\n  const { labelText, labelIcon, labelInfo, ...other } = props\n\n  return (\n    <StyledTreeItemRoot\n      {...other}\n      label={\n        <Box sx={{ py: 1, display: 'flex', alignItems: 'center', '& svg': { mr: 1 } }}>\n          <Icon icon={labelIcon} color='inherit' />\n          <Typography variant='body2' sx={{ flexGrow: 1, fontWeight: 'inherit' }}>\n            {labelText}\n          </Typography>\n          {labelInfo ? (\n            <Typography variant='caption' color='inherit'>\n              {labelInfo}\n            </Typography>\n          ) : null}\n        </Box>\n      }\n    />\n  )\n}\n\nconst TreeViewGmailClone = ({ direction }: Props) => {\n  const ExpandIcon = <Icon icon={direction === 'rtl' ? 'mdi:chevron-left' : 'mdi:chevron-right'} />\n\n  return (\n    <TreeView\n      sx={{ minHeight: 240 }}\n      defaultExpanded={['3']}\n      defaultExpandIcon={ExpandIcon}\n      defaultCollapseIcon={<Icon icon='mdi:chevron-down' />}\n    >\n      <StyledTreeItem nodeId='1' labelText='All Mail' labelIcon='mdi:email-outline' />\n      <StyledTreeItem nodeId='2' labelText='Trash' labelIcon='mdi:delete-outline' />\n      <StyledTreeItem nodeId='3' labelText='Categories' labelIcon='mdi:label-outline'>\n        <StyledTreeItem nodeId='5' labelInfo='90' labelText='Social' labelIcon='mdi:account-supervisor-outline' />\n        <StyledTreeItem nodeId='6' labelInfo='2,294' labelText='Updates' labelIcon='mdi:information-outline' />\n        <StyledTreeItem nodeId='7' labelInfo='3,566' labelText='Forums' labelIcon='mdi:forum-outline' />\n        <StyledTreeItem nodeId='8' labelInfo='733' labelText='Promotions' labelIcon='mdi:tag-outline' />\n      </StyledTreeItem>\n      <StyledTreeItem nodeId='4' labelText='History' labelIcon='mdi:label-outline' />\n    </TreeView>\n  )\n}\n\nexport default TreeViewGmailClone\n"})}),A=()=>{let{settings:e}=(0,i.r)();return(0,t.jsxs)(l.ZP,{container:!0,spacing:6,className:"match-height",children:[(0,t.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,t.jsxs)(d.Z,{title:"Basic Tree View",code:{tsx:R,jsx:S},children:[(0,t.jsxs)(r.Z,{sx:{mb:4},children:["Use ",(0,t.jsx)("code",{children:"TreeView"})," & ",(0,t.jsx)("code",{children:"TreeItem"})," components and ",(0,t.jsx)("code",{children:"defaultCollapseIcon"})," &"," ",(0,t.jsx)("code",{children:"defaultExpandIcon"})," props with ",(0,t.jsx)("code",{children:"TreeView"})," component for a simple tree view."]}),(0,t.jsx)(m,{direction:e.direction})]})}),(0,t.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,t.jsxs)(d.Z,{title:"Multi Selection",code:{tsx:W,jsx:V},children:[(0,t.jsxs)(r.Z,{sx:{mb:4},children:["Use ",(0,t.jsx)("code",{children:"multiSelect"})," prop for multiple selection in a tree view."]}),(0,t.jsx)(Z,{direction:e.direction})]})}),(0,t.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,t.jsxs)(d.Z,{title:"Controlled Tree View",code:{tsx:P,jsx:M},children:[(0,t.jsxs)(r.Z,{sx:{mb:4},children:["Manage ",(0,t.jsx)("code",{children:"expanded"}),", ",(0,t.jsx)("code",{children:"selected"}),", ",(0,t.jsx)("code",{children:"onNodeToggle"})," and ",(0,t.jsx)("code",{children:"onNodeSelect"})," ","props with the help of states."]}),(0,t.jsx)(p,{direction:e.direction})]})}),(0,t.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,t.jsxs)(d.Z,{title:"Rich Object",code:{tsx:H,jsx:E},children:[(0,t.jsxs)(r.Z,{sx:{mb:4},children:[(0,t.jsx)("code",{children:"TreeView"})," and ",(0,t.jsx)("code",{children:"TreeItem"})," components can also use APIs. Use an object and recursion can be used to handle it."]}),(0,t.jsx)(h,{direction:e.direction})]})}),(0,t.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,t.jsxs)(d.Z,{title:"Customized Tree View",code:{tsx:N,jsx:v},children:[(0,t.jsxs)(r.Z,{sx:{mb:4},children:["Use ",(0,t.jsx)("code",{children:"styled"})," hook to customize your tree view."]}),(0,t.jsx)(g,{})]})}),(0,t.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,t.jsx)(d.Z,{title:"Gmail Clone",code:{tsx:U,jsx:C},children:(0,t.jsx)(y,{direction:e.direction})})})]})};var O=A}},function(e){e.O(0,[4386,5511,1456,9774,2888,179],function(){return e(e.s=83753)}),_N_E=e.O()}]);