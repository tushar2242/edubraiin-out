(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6847],{17130:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/forms/form-elements/pickers",function(){return n(3841)}])},92223:function(e,t,n){"use strict";n.d(t,{Z:function(){return j}});var a=n(85893),s=n(67294),r=n(87357),o=n(66242),p=n(34386),c=n(67720),l=n(57922),d=n(93946),i=n(78445),m=n(44267),u=n(96420),D=n(98396),x=n(33454),h=n(63730),P=n(15660),y=n.n(P),f=n(86501),k=n(66485),g=n.n(k);let I=e=>e&&("TEXTAREA"===e.nodeName||"INPUT"===e.nodeName);var C=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,s.useRef)(null),n=()=>{e.onSuccess&&e.onSuccess(),e.selectOnCopy&&I(t.current)&&t.current.select()},a=()=>{e.onError&&e.onError();let n=!1!==e.selectOnError;n&&I(t.current)&&t.current.select()},r=e=>{g()(e).then(n).catch(a)},o=(0,s.useCallback)(e=>{"string"==typeof e?r(e):t.current&&r(t.current.value)},[]);return{copy:o,target:t}};let w=e=>{let{id:t,sx:n,code:P,title:k,children:g,className:I}=e,[w,j]=(0,s.useState)(!1),[T,M]=(0,s.useState)(null!==P.tsx?"tsx":"jsx"),S=C(),b=(0,D.Z)(e=>e.breakpoints.down("md"));(0,s.useEffect)(()=>{y().highlightAll()},[w,T]);let v=()=>null!==P.tsx&&"tsx"===T?P.tsx.props.children.props.children:null!==P.jsx&&"jsx"===T?P.jsx.props.children.props.children:"",B=()=>{S.copy(v()),f.ZP.success("The source code has been copied to your clipboard.",{duration:2e3})};return(0,a.jsxs)(o.Z,{className:I,sx:{"& .MuiCardHeader-action":{lineHeight:.8},...n},id:t||"card-snippet--".concat(k.toLowerCase().replace(/ /g,"-")),children:[(0,a.jsx)(i.Z,{title:k,...b?{}:{action:(0,a.jsx)(d.Z,{onClick:()=>j(!w),children:(0,a.jsx)(h.Z,{icon:"mdi:code-tags",fontSize:20})})}}),(0,a.jsx)(m.Z,{children:g}),b?null:(0,a.jsxs)(l.Z,{in:w,children:[(0,a.jsx)(c.Z,{sx:{my:"0 !important"}}),(0,a.jsxs)(m.Z,{sx:{position:"relative","& pre":{m:"0 !important",maxHeight:500}},children:[(0,a.jsx)(r.Z,{sx:{mb:4,display:"flex",alignItems:"center",justifyContent:"flex-end"},children:(0,a.jsxs)(x.Z,{exclusive:!0,size:"small",color:"primary",value:T,onChange:(e,t)=>null!==t?M(t):null,children:[null!==P.tsx?(0,a.jsx)(u.Z,{value:"tsx",children:(0,a.jsx)(h.Z,{icon:"mdi:language-typescript",fontSize:20})}):null,null!==P.jsx?(0,a.jsx)(u.Z,{value:"jsx",children:(0,a.jsx)(h.Z,{icon:"mdi:language-javascript",fontSize:20})}):null]})}),(0,a.jsx)(p.Z,{title:"Copy the source",placement:"top",children:(0,a.jsx)(d.Z,{onClick:B,sx:{top:"5rem",color:"grey.100",right:"2.5625rem",position:"absolute"},children:(0,a.jsx)(h.Z,{icon:"mdi:content-copy",fontSize:20})})}),(0,a.jsx)("div",{children:null!==P[T]?P[T]:null})]})]})]})};var j=w},25358:function(e,t,n){"use strict";var a=n(85893),s=n(86886);let r=e=>{let{title:t,subtitle:n}=e;return(0,a.jsxs)(s.ZP,{item:!0,xs:12,children:[t,n||null]})};t.Z=r},3841:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return eD}});var a=n(85893),s=n(41664),r=n.n(s),o=n(86886),p=n(90948),c=n(2734),l=n(15861),d=n(25358),i=n(92223),m=n(82229),u=n(67294),D=n(87357),x=n(9198),h=n.n(x),P=n(92313);let y=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date);return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showTimeSelect:!0,selected:n,timeIntervals:15,showTimeSelectOnly:!0,dateFormat:"h:mm aa",id:"time-only-picker",popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Time Only"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showTimeSelect:!0,timeFormat:"HH:mm",timeIntervals:15,selected:r,id:"date-time-picker",dateFormat:"MM/dd/yyyy h:mm aa",popperPlacement:t,onChange:e=>o(e),customInput:(0,a.jsx)(P.Z,{label:"Date & Time"})})})]})},f=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date);return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,id:"basic-input",popperPlacement:t,onChange:e=>s(e),placeholderText:"Click to select a date",customInput:(0,a.jsx)(P.Z,{label:"Basic"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{disabled:!0,selected:n,id:"disabled-input",popperPlacement:t,onChange:e=>s(e),placeholderText:"Click to select a date",customInput:(0,a.jsx)(P.Z,{label:"Disabled"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{readOnly:!0,selected:n,id:"read-only-input",popperPlacement:t,onChange:e=>s(e),placeholderText:"Click to select a date",customInput:(0,a.jsx)(P.Z,{readOnly:!0,label:"Readonly"})})})]})};var k=n(50135),g=n(42298),I=n(77349);let C=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)((0,I.default)(new Date,15)),[p,c]=(0,u.useState)(new Date),[l,d]=(0,u.useState)((0,I.default)(new Date,45)),i=e=>{let[t,n]=e;s(t),o(n)},m=e=>{let[t,n]=e;c(t),d(n)},x=(0,u.forwardRef)((e,t)=>{let n=(0,g.default)(e.start,"MM/dd/yyyy"),s=null!==e.end?" - ".concat((0,g.default)(e.end,"MM/dd/yyyy")):null,r="".concat(n).concat(null!==s?s:"");return(0,a.jsx)(k.Z,{inputRef:t,label:e.label||"",...e,value:r})});return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selectsRange:!0,endDate:r,selected:n,startDate:n,id:"date-range-picker",onChange:i,shouldCloseOnSelect:!1,popperPlacement:t,customInput:(0,a.jsx)(x,{label:"Date Range",start:n,end:r})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selectsRange:!0,monthsShown:2,endDate:l,selected:p,startDate:p,shouldCloseOnSelect:!1,id:"date-range-picker-months",onChange:m,popperPlacement:t,customInput:(0,a.jsx)(x,{label:"Multiple Months",end:l,start:p})})})]})};var w=n(7069);let j=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date);return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{id:"min-date",selected:n,minDate:(0,w.default)(new Date,5),popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Min Date"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{id:"max-date",selected:r,maxDate:(0,I.default)(new Date,5),popperPlacement:t,onChange:e=>o(e),customInput:(0,a.jsx)(P.Z,{label:"Max Date"})})})]})};var T=n(75830),M=n(69884),S=n(95826),b=n(22120);let v={fr:T.Z,ar:M.Z,en:S.Z},B=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date),{i18n:p}=(0,b.$G)();return(0,x.registerLocale)(p.language,v[p.language]),(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,id:"locale-picker",locale:p.language,popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Locale Dates"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showTimeSelect:!0,selected:r,id:"locale-time",locale:p.language,dateFormat:"MM/dd/yyyy h:mm aa",popperPlacement:t,onChange:e=>o(e),customInput:(0,a.jsx)(P.Z,{label:"Locale Time"})})})]})},R=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(null),[r,o]=(0,u.useState)(new Date),[p,c]=(0,u.useState)(new Date),[l,d]=(0,u.useState)(new Date),[i,m]=(0,u.useState)(new Date),x=e=>{let t=new Date(e).getDay();return 0!==t&&6!==t};return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{isClearable:!0,id:"picker-clear",selected:r,popperPlacement:t,customInput:(0,a.jsx)(P.Z,{label:"Clear"}),onChange:e=>o(e)})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{weekLabel:"Wk",showWeekNumbers:!0,id:"picker-week-num",selected:l,popperPlacement:t,onChange:e=>d(e),customInput:(0,a.jsx)(P.Z,{label:"Week Numbers"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{id:"picker-filter",selected:p,filterDate:x,popperPlacement:t,onChange:e=>c(e),customInput:(0,a.jsx)(P.Z,{label:"Filter Dates"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showYearDropdown:!0,showMonthDropdown:!0,selected:n,id:"picker-open-date",popperPlacement:t,openToDate:new Date("1993/09/28"),onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Open To Date"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{todayButton:"Today",selected:i,id:"picker-date-today-btn",popperPlacement:t,onChange:e=>m(e),customInput:(0,a.jsx)(P.Z,{label:"Date Today Button"})})})]})};var N=n(86501);let Z=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),r=e=>{(0,N.ZP)(e,{duration:2e3})};return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,id:"callback-open",dateFormat:"MM/dd/yyyy",popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Open & Closed"}),onCalendarOpen:()=>r("Selected Date: ".concat(new Date(n||"").toLocaleDateString())),onCalendarClose:()=>r("Selected Date: ".concat(new Date(n||"").toLocaleDateString()))})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,id:"callback-blur",popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Blur"}),onBlur:()=>r("Picker Closed")})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,id:"callback-change",popperPlacement:t,customInput:(0,a.jsx)(P.Z,{label:"onChange"}),onChange:e=>{s(e),r("Selected Date: ".concat(new Date(e||"").toLocaleDateString()))}})})]})};var Y=n(37042),F=n(4543);let H=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date);return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,id:"specific-date",minDate:new Date,maxDate:(0,I.default)(new Date,5),popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Specific Date Range"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showTimeSelect:!0,selected:r,id:"specific-time",dateFormat:"MM/dd/yyyy h:mm aa",popperPlacement:t,onChange:e=>o(e),minTime:(0,Y.default)((0,F.default)(new Date,0),17),maxTime:(0,Y.default)((0,F.default)(new Date,30),20),customInput:(0,a.jsx)(P.Z,{label:"Specific Time"})})})]})},O=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date);return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{id:"custom-format",selected:n,dateFormat:"MMMM d, yyyy",popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Custom Date Format"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{id:"highlight-dates",selected:r,popperPlacement:t,onChange:e=>o(e),customInput:(0,a.jsx)(P.Z,{label:"Highlight Dates"}),highlightDates:[(0,w.default)(new Date,7),(0,I.default)(new Date,7)]})})]})},W=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date),[p,c]=(0,u.useState)((0,Y.default)((0,F.default)(new Date,0),18)),[l,d]=(0,u.useState)((0,Y.default)((0,F.default)(new Date,0),18));return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,id:"include-dates",popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Include Dates"}),includeDates:[new Date,(0,I.default)(new Date,1)]})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{id:"exclude-dates",selected:r,popperPlacement:t,onChange:e=>o(e),customInput:(0,a.jsx)(P.Z,{label:"Exclude Dates"}),excludeDates:[(0,w.default)(new Date,1),(0,w.default)(new Date,2)]})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showTimeSelect:!0,selected:p,id:"include-time",dateFormat:"MM/dd/yyyy h:mm aa",popperPlacement:t,onChange:e=>c(e),customInput:(0,a.jsx)(P.Z,{label:"Include Time"}),includeTimes:[(0,Y.default)((0,F.default)(new Date,0),17),(0,Y.default)((0,F.default)(new Date,30),18),(0,Y.default)((0,F.default)(new Date,30),19),(0,Y.default)((0,F.default)(new Date,30),17)]})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showTimeSelect:!0,id:"exclude-time",selected:l,dateFormat:"MM/dd/yyyy h:mm aa",popperPlacement:t,onChange:e=>d(e),customInput:(0,a.jsx)(P.Z,{label:"Exclude Time"}),excludeTimes:[(0,Y.default)((0,F.default)(new Date,0),17),(0,Y.default)((0,F.default)(new Date,30),18),(0,Y.default)((0,F.default)(new Date,30),19),(0,Y.default)((0,F.default)(new Date,30),17)]})})]})},E=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date),[p,c]=(0,u.useState)(new Date);return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:r,id:"month-picker",showMonthYearPicker:!0,dateFormat:"MM/yyyy",popperPlacement:t,onChange:e=>o(e),customInput:(0,a.jsx)(P.Z,{label:"Month Picker"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showYearPicker:!0,selected:n,id:"year-picker",dateFormat:"MM/yyyy",popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Year Picker"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:p,id:"quarter-picker",showQuarterYearPicker:!0,dateFormat:"yyyy, QQQ",popperPlacement:t,onChange:e=>c(e),customInput:(0,a.jsx)(P.Z,{label:"Quarter Picker"})})})]})},L=e=>{let{popperPlacement:t}=e,[n,s]=(0,u.useState)(new Date),[r,o]=(0,u.useState)(new Date),[p,c]=(0,u.useState)(new Date);return(0,a.jsxs)(D.Z,{sx:{display:"flex",flexWrap:"wrap"},className:"demo-space-x",children:[(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:r,showMonthDropdown:!0,id:"month-dropdown",placeholderText:"MM-DD-YYYY",popperPlacement:t,onChange:e=>o(e),customInput:(0,a.jsx)(P.Z,{label:"Month Dropdown"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{selected:n,showYearDropdown:!0,id:"year-dropdown",placeholderText:"MM-DD-YYYY",popperPlacement:t,onChange:e=>s(e),customInput:(0,a.jsx)(P.Z,{label:"Year Dropdown"})})}),(0,a.jsx)("div",{children:(0,a.jsx)(h(),{showYearDropdown:!0,showMonthDropdown:!0,showTimeSelect:!0,selected:p,id:"month-year-dropdown",dateFormat:"MM/dd/yyyy h:mm aa",timeFormat:"HH:mm",placeholderText:"MM-DD-YYYY",popperPlacement:t,onChange:e=>c(e),customInput:(0,a.jsx)(P.Z,{label:"Month & Year Dropdown"})})})]})},U=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersBasic = ({ popperPlacement }) => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='basic-input'\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Basic' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          disabled\n          selected={date}\n          id='disabled-input'\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Disabled' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          readOnly\n          selected={date}\n          id='read-only-input'\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput readOnly label='Readonly' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersBasic\n"})}),Q=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport toast from 'react-hot-toast'\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCallbacks = ({ popperPlacement }) => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n\n  const handlePickerCallback = msg => {\n    toast(msg, { duration: 2000 })\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='callback-open'\n          dateFormat='MM/dd/yyyy'\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Open & Closed' />}\n          onCalendarOpen={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n          onCalendarClose={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={date}\n          id='callback-blur'\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Blur' />}\n          onBlur={() => handlePickerCallback('Picker Closed')}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={date}\n          id='callback-change'\n          popperPlacement={popperPlacement}\n          customInput={<CustomInput label='onChange' />}\n          onChange={date => {\n            setDate(date)\n            handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})\n          }}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersCallbacks\n"})}),_=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCustomization = ({ popperPlacement }) => {\n  // ** States\n  const [dateFormat, setDateFormat] = useState(new Date())\n  const [dateHighlight, setDateHighlight] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          id='custom-format'\n          selected={dateFormat}\n          dateFormat='MMMM d, yyyy'\n          popperPlacement={popperPlacement}\n          onChange={date => setDateFormat(date)}\n          customInput={<CustomInput label='Custom Date Format' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='highlight-dates'\n          selected={dateHighlight}\n          popperPlacement={popperPlacement}\n          onChange={date => setDateHighlight(date)}\n          customInput={<CustomInput label='Highlight Dates' />}\n          highlightDates={[subDays(new Date(), 7), addDays(new Date(), 7)]}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersCustomization\n"})}),z=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst langObj = { fr, ar, en }\n\nconst PickersLocale = ({ popperPlacement }) => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n  const [time, setTime] = useState(new Date())\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n  registerLocale(i18n.language, langObj[i18n.language])\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='locale-picker'\n          locale={i18n.language}\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Locale Dates' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='locale-time'\n          locale={i18n.language}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={date => setTime(date)}\n          customInput={<CustomInput label='Locale Time' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersLocale\n"})}),q=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMinMax = ({ popperPlacement }) => {\n  // ** States\n  const [minDate, setMinDate] = useState(new Date())\n  const [maxDate, setMaxDate] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          id='min-date'\n          selected={minDate}\n          minDate={subDays(new Date(), 5)}\n          popperPlacement={popperPlacement}\n          onChange={date => setMinDate(date)}\n          customInput={<CustomInput label='Min Date' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='max-date'\n          selected={maxDate}\n          maxDate={addDays(new Date(), 5)}\n          popperPlacement={popperPlacement}\n          onChange={date => setMaxDate(date)}\n          customInput={<CustomInput label='Max Date' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersMinMax\n"})}),A=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYearDropdowns = ({ popperPlacement }) => {\n  // ** States\n  const [year, setYear] = useState(new Date())\n  const [month, setMonth] = useState(new Date())\n  const [monthYear, setMonthYear] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={month}\n          showMonthDropdown\n          id='month-dropdown'\n          placeholderText='MM-DD-YYYY'\n          popperPlacement={popperPlacement}\n          onChange={date => setMonth(date)}\n          customInput={<CustomInput label='Month Dropdown' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={year}\n          showYearDropdown\n          id='year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          popperPlacement={popperPlacement}\n          onChange={date => setYear(date)}\n          customInput={<CustomInput label='Year Dropdown' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showYearDropdown\n          showMonthDropdown\n          selected={monthYear}\n          id='month-year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          popperPlacement={popperPlacement}\n          onChange={date => setMonthYear(date)}\n          customInput={<CustomInput label='Month & Year Dropdown' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersMonthYearDropdowns\n"})}),X=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYear = ({ popperPlacement }) => {\n  // ** States\n  const [year, setYear] = useState(new Date())\n  const [month, setMonth] = useState(new Date())\n  const [quarter, setQuarter] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={month}\n          id='month-picker'\n          showMonthYearPicker\n          dateFormat='MM/yyyy'\n          popperPlacement={popperPlacement}\n          onChange={date => setMonth(date)}\n          customInput={<CustomInput label='Month Picker' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showYearPicker\n          selected={year}\n          id='year-picker'\n          dateFormat='MM/yyyy'\n          popperPlacement={popperPlacement}\n          onChange={date => setYear(date)}\n          customInput={<CustomInput label='Year Picker' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={quarter}\n          id='quarter-picker'\n          showQuarterYearPicker\n          dateFormat='yyyy, QQQ'\n          popperPlacement={popperPlacement}\n          onChange={date => setQuarter(date)}\n          customInput={<CustomInput label='Quarter Picker' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersMonthYear\n"})}),G=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersOptions = ({ popperPlacement }) => {\n  // ** States\n  const [dateOpen, setDateOpen] = useState(null)\n  const [dateClear, setDateClear] = useState(new Date())\n  const [dateFilter, setDateFilter] = useState(new Date())\n  const [dateWeekNum, setDateWeekNum] = useState(new Date())\n  const [dateTodayBtn, setDateTodayBtn] = useState(new Date())\n\n  const isWeekday = date => {\n    const day = new Date(date).getDay()\n\n    return day !== 0 && day !== 6\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          isClearable\n          id='picker-clear'\n          selected={dateClear}\n          popperPlacement={popperPlacement}\n          customInput={<CustomInput label='Clear' />}\n          onChange={date => setDateClear(date)}\n        />\n      </div>\n      <div>\n        <DatePicker\n          weekLabel='Wk'\n          showWeekNumbers\n          id='picker-week-num'\n          selected={dateWeekNum}\n          popperPlacement={popperPlacement}\n          onChange={date => setDateWeekNum(date)}\n          customInput={<CustomInput label='Week Numbers' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='picker-filter'\n          selected={dateFilter}\n          filterDate={isWeekday}\n          popperPlacement={popperPlacement}\n          onChange={date => setDateFilter(date)}\n          customInput={<CustomInput label='Filter Dates' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showYearDropdown\n          showMonthDropdown\n          selected={dateOpen}\n          id='picker-open-date'\n          popperPlacement={popperPlacement}\n          openToDate={new Date('1993/09/28')}\n          onChange={date => setDateOpen(date)}\n          customInput={<CustomInput label='Open To Date' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          todayButton='Today'\n          selected={dateTodayBtn}\n          id='picker-date-today-btn'\n          popperPlacement={popperPlacement}\n          onChange={date => setDateTodayBtn(date)}\n          customInput={<CustomInput label='Date Today Button' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersOptions\n"})}),$=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState, forwardRef } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\n\n// ** Third Party Imports\nimport format from 'date-fns/format'\nimport addDays from 'date-fns/addDays'\nimport DatePicker from 'react-datepicker'\n\nconst PickersRange = ({ popperPlacement }) => {\n  // ** States\n  const [startDate, setStartDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(addDays(new Date(), 15))\n  const [startDateRange, setStartDateRange] = useState(new Date())\n  const [endDateRange, setEndDateRange] = useState(addDays(new Date(), 45))\n\n  const handleOnChange = dates => {\n    const [start, end] = dates\n    setStartDate(start)\n    setEndDate(end)\n  }\n\n  const handleOnChangeRange = dates => {\n    const [start, end] = dates\n    setStartDateRange(start)\n    setEndDateRange(end)\n  }\n\n  const CustomInput = forwardRef((props, ref) => {\n    const startDate = format(props.start, 'MM/dd/yyyy')\n    const endDate = props.end !== null ?  - {format(props.end, 'MM/dd/yyyy')} : null\n    const value = {startDate}{endDate !== null ? endDate : ''}\n\n    return <TextField inputRef={ref} label={props.label || ''} {...props} value={value} />\n  })\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selectsRange\n          endDate={endDate}\n          selected={startDate}\n          startDate={startDate}\n          id='date-range-picker'\n          onChange={handleOnChange}\n          shouldCloseOnSelect={false}\n          popperPlacement={popperPlacement}\n          customInput={<CustomInput label='Date Range' start={startDate} end={endDate} />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selectsRange\n          monthsShown={2}\n          endDate={endDateRange}\n          selected={startDateRange}\n          startDate={startDateRange}\n          shouldCloseOnSelect={false}\n          id='date-range-picker-months'\n          onChange={handleOnChangeRange}\n          popperPlacement={popperPlacement}\n          customInput={<CustomInput label='Multiple Months' end={endDateRange} start={startDateRange} />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersRange\n"})}),J=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\nimport setHours from 'date-fns/setHours'\nimport DatePicker from 'react-datepicker'\nimport setMinutes from 'date-fns/setMinutes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersIncludeExclude = ({ popperPlacement }) => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n  const [dateExclude, setDateExclude] = useState(new Date())\n  const [time, setTime] = useState(setHours(setMinutes(new Date(), 0), 18))\n  const [timeExclude, setTimeExclude] = useState(setHours(setMinutes(new Date(), 0), 18))\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='include-dates'\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Include Dates' />}\n          includeDates={[new Date(), addDays(new Date(), 1)]}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='exclude-dates'\n          selected={dateExclude}\n          popperPlacement={popperPlacement}\n          onChange={date => setDateExclude(date)}\n          customInput={<CustomInput label='Exclude Dates' />}\n          excludeDates={[subDays(new Date(), 1), subDays(new Date(), 2)]}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='include-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={date => setTime(date)}\n          customInput={<CustomInput label='Include Time' />}\n          includeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          id='exclude-time'\n          selected={timeExclude}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={date => setTimeExclude(date)}\n          customInput={<CustomInput label='Exclude Time' />}\n          excludeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersIncludeExclude\n"})}),K=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersTime = ({ popperPlacement }) => {\n  // ** States\n  const [time, setTime] = useState(new Date())\n  const [dateTime, setDateTime] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          timeIntervals={15}\n          showTimeSelectOnly\n          dateFormat='h:mm aa'\n          id='time-only-picker'\n          popperPlacement={popperPlacement}\n          onChange={date => setTime(date)}\n          customInput={<CustomInput label='Time Only' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          timeFormat='HH:mm'\n          timeIntervals={15}\n          selected={dateTime}\n          id='date-time-picker'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={date => setDateTime(date)}\n          customInput={<CustomInput label='Date & Time' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersTime\n"})}),V=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport setHours from 'date-fns/setHours'\nimport setMinutes from 'date-fns/setMinutes'\nimport DatePicker from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersSpecificRange = ({ popperPlacement }) => {\n  // ** States\n  const [date, setDate] = useState(new Date())\n  const [time, setTime] = useState(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='specific-date'\n          minDate={new Date()}\n          maxDate={addDays(new Date(), 5)}\n          popperPlacement={popperPlacement}\n          onChange={date => setDate(date)}\n          customInput={<CustomInput label='Specific Date Range' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='specific-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={date => setTime(date)}\n          minTime={setHours(setMinutes(new Date(), 0), 17)}\n          maxTime={setHours(setMinutes(new Date(), 30), 20)}\n          customInput={<CustomInput label='Specific Time' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersSpecificRange\n"})}),ee=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCustomization = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [dateFormat, setDateFormat] = useState<DateType>(new Date())\n  const [dateHighlight, setDateHighlight] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          id='custom-format'\n          selected={dateFormat}\n          dateFormat='MMMM d, yyyy'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDateFormat(date)}\n          customInput={<CustomInput label='Custom Date Format' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='highlight-dates'\n          selected={dateHighlight}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDateHighlight(date)}\n          customInput={<CustomInput label='Highlight Dates' />}\n          highlightDates={[subDays(new Date(), 7), addDays(new Date(), 7)]}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersCustomization\n"})}),et=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport subDays from 'date-fns/subDays'\nimport setHours from 'date-fns/setHours'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport setMinutes from 'date-fns/setMinutes'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersIncludeExclude = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n  const [dateExclude, setDateExclude] = useState<DateType>(new Date())\n  const [time, setTime] = useState<DateType>(setHours(setMinutes(new Date(), 0), 18))\n  const [timeExclude, setTimeExclude] = useState<DateType>(setHours(setMinutes(new Date(), 0), 18))\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='include-dates'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Include Dates' />}\n          includeDates={[new Date(), addDays(new Date(), 1)]}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='exclude-dates'\n          selected={dateExclude}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDateExclude(date)}\n          customInput={<CustomInput label='Exclude Dates' />}\n          excludeDates={[subDays(new Date(), 1), subDays(new Date(), 2)]}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='include-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setTime(date)}\n          customInput={<CustomInput label='Include Time' />}\n          includeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          id='exclude-time'\n          selected={timeExclude}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setTimeExclude(date)}\n          customInput={<CustomInput label='Exclude Time' />}\n          excludeTimes={[\n            setHours(setMinutes(new Date(), 0), 17),\n            setHours(setMinutes(new Date(), 30), 18),\n            setHours(setMinutes(new Date(), 30), 19),\n            setHours(setMinutes(new Date(), 30), 17)\n          ]}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersIncludeExclude\n"})}),en=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport { Locale } from 'date-fns'\nimport fr from 'date-fns/locale/fr'\nimport ar from 'date-fns/locale/ar-SA'\nimport en from 'date-fns/locale/en-US'\nimport { useTranslation } from 'react-i18next'\nimport DatePicker, { registerLocale, ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst langObj: { [key: string]: Locale } = { fr, ar, en }\n\nconst PickersLocale = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n  const [time, setTime] = useState<DateType>(new Date())\n\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  registerLocale(i18n.language, langObj[i18n.language])\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='locale-picker'\n          locale={i18n.language}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Locale Dates' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='locale-time'\n          locale={i18n.language}\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setTime(date)}\n          customInput={<CustomInput label='Locale Time' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersLocale\n"})}),ea=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\nconst PickersBasic = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='basic-input'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Basic' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          disabled\n          selected={date}\n          id='disabled-input'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput label='Disabled' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          readOnly\n          selected={date}\n          id='read-only-input'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          placeholderText='Click to select a date'\n          customInput={<CustomInput readOnly label='Readonly' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersBasic\n"})}),es=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersOptions = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [dateOpen, setDateOpen] = useState<DateType>(null)\n  const [dateClear, setDateClear] = useState<DateType>(new Date())\n  const [dateFilter, setDateFilter] = useState<DateType>(new Date())\n  const [dateWeekNum, setDateWeekNum] = useState<DateType>(new Date())\n  const [dateTodayBtn, setDateTodayBtn] = useState<DateType>(new Date())\n\n  const isWeekday = (date: Date) => {\n    const day = new Date(date).getDay()\n\n    return day !== 0 && day !== 6\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          isClearable\n          id='picker-clear'\n          selected={dateClear}\n          popperPlacement={popperPlacement}\n          customInput={<CustomInput label='Clear' />}\n          onChange={(date: Date) => setDateClear(date)}\n        />\n      </div>\n      <div>\n        <DatePicker\n          weekLabel='Wk'\n          showWeekNumbers\n          id='picker-week-num'\n          selected={dateWeekNum}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDateWeekNum(date)}\n          customInput={<CustomInput label='Week Numbers' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='picker-filter'\n          selected={dateFilter}\n          filterDate={isWeekday}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDateFilter(date)}\n          customInput={<CustomInput label='Filter Dates' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showYearDropdown\n          showMonthDropdown\n          selected={dateOpen}\n          id='picker-open-date'\n          popperPlacement={popperPlacement}\n          openToDate={new Date('1993/09/28')}\n          onChange={(date: Date) => setDateOpen(date)}\n          customInput={<CustomInput label='Open To Date' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          todayButton='Today'\n          selected={dateTodayBtn}\n          id='picker-date-today-btn'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDateTodayBtn(date)}\n          customInput={<CustomInput label='Date Today Button' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersOptions\n"})}),er=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState, forwardRef } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\n\n// ** Third Party Imports\nimport format from 'date-fns/format'\nimport addDays from 'date-fns/addDays'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\ninterface PickerProps {\n  label?: string\n  end: Date | number\n  start: Date | number\n}\n\nconst PickersRange = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [startDate, setStartDate] = useState<DateType>(new Date())\n  const [endDate, setEndDate] = useState<DateType>(addDays(new Date(), 15))\n  const [startDateRange, setStartDateRange] = useState<DateType>(new Date())\n  const [endDateRange, setEndDateRange] = useState<DateType>(addDays(new Date(), 45))\n\n  const handleOnChange = (dates: any) => {\n    const [start, end] = dates\n    setStartDate(start)\n    setEndDate(end)\n  }\n\n  const handleOnChangeRange = (dates: any) => {\n    const [start, end] = dates\n    setStartDateRange(start)\n    setEndDateRange(end)\n  }\n\n  const CustomInput = forwardRef((props: PickerProps, ref) => {\n    const startDate = format(props.start, 'MM/dd/yyyy')\n    const endDate = props.end !== null ?  - {format(props.end, 'MM/dd/yyyy')} : null\n\n    const value = {startDate}{endDate !== null ? endDate : ''}\n\n    return <TextField inputRef={ref} label={props.label || ''} {...props} value={value} />\n  })\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selectsRange\n          endDate={endDate}\n          selected={startDate}\n          startDate={startDate}\n          id='date-range-picker'\n          onChange={handleOnChange}\n          shouldCloseOnSelect={false}\n          popperPlacement={popperPlacement}\n          customInput={\n            <CustomInput label='Date Range' start={startDate as Date | number} end={endDate as Date | number} />\n          }\n        />\n      </div>\n      <div>\n        <DatePicker\n          selectsRange\n          monthsShown={2}\n          endDate={endDateRange}\n          selected={startDateRange}\n          startDate={startDateRange}\n          shouldCloseOnSelect={false}\n          id='date-range-picker-months'\n          onChange={handleOnChangeRange}\n          popperPlacement={popperPlacement}\n          customInput={\n            <CustomInput\n              label='Multiple Months'\n              end={endDateRange as Date | number}\n              start={startDateRange as Date | number}\n            />\n          }\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersRange\n"})}),eo=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport addDays from 'date-fns/addDays'\nimport setHours from 'date-fns/setHours'\nimport setMinutes from 'date-fns/setMinutes'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersSpecificRange = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n  const [time, setTime] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='specific-date'\n          minDate={new Date()}\n          maxDate={addDays(new Date(), 5)}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Specific Date Range' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          id='specific-time'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setTime(date)}\n          minTime={setHours(setMinutes(new Date(), 0), 17)}\n          maxTime={setHours(setMinutes(new Date(), 30), 20)}\n          customInput={<CustomInput label='Specific Time' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersSpecificRange\n"})}),ep=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYear = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [year, setYear] = useState<DateType>(new Date())\n  const [month, setMonth] = useState<DateType>(new Date())\n  const [quarter, setQuarter] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={month}\n          id='month-picker'\n          showMonthYearPicker\n          dateFormat='MM/yyyy'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setMonth(date)}\n          customInput={<CustomInput label='Month Picker' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showYearPicker\n          selected={year}\n          id='year-picker'\n          dateFormat='MM/yyyy'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setYear(date)}\n          customInput={<CustomInput label='Year Picker' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={quarter}\n          id='quarter-picker'\n          showQuarterYearPicker\n          dateFormat='yyyy, QQQ'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setQuarter(date)}\n          customInput={<CustomInput label='Quarter Picker' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersMonthYear\n"})}),ec=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport toast from 'react-hot-toast'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersCallbacks = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [date, setDate] = useState<DateType>(new Date())\n\n  const handlePickerCallback = (msg: string) => {\n    toast(msg, { duration: 2000 })\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={date}\n          id='callback-open'\n          dateFormat='MM/dd/yyyy'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Open & Closed' />}\n          onCalendarOpen={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n          onCalendarClose={() => handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={date}\n          id='callback-blur'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDate(date)}\n          customInput={<CustomInput label='Blur' />}\n          onBlur={() => handlePickerCallback('Picker Closed')}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={date}\n          id='callback-change'\n          popperPlacement={popperPlacement}\n          customInput={<CustomInput label='onChange' />}\n          onChange={(date: Date) => {\n            setDate(date)\n            handlePickerCallback(Selected Date: {new Date(date || '').toLocaleDateString()})\n          }}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersCallbacks\n"})}),el=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMonthYearDropdowns = ({\n  popperPlacement\n}: {\n  popperPlacement: ReactDatePickerProps['popperPlacement']\n}) => {\n  // ** States\n  const [year, setYear] = useState<DateType>(new Date())\n  const [month, setMonth] = useState<DateType>(new Date())\n  const [monthYear, setMonthYear] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          selected={month}\n          showMonthDropdown\n          id='month-dropdown'\n          placeholderText='MM-DD-YYYY'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setMonth(date)}\n          customInput={<CustomInput label='Month Dropdown' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          selected={year}\n          showYearDropdown\n          id='year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setYear(date)}\n          customInput={<CustomInput label='Year Dropdown' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showYearDropdown\n          showMonthDropdown\n          selected={monthYear}\n          id='month-year-dropdown'\n          placeholderText='MM-DD-YYYY'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setMonthYear(date)}\n          customInput={<CustomInput label='Month & Year Dropdown' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersMonthYearDropdowns\n"})}),ed=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersTime = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [time, setTime] = useState<DateType>(new Date())\n  const [dateTime, setDateTime] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          showTimeSelect\n          selected={time}\n          timeIntervals={15}\n          showTimeSelectOnly\n          dateFormat='h:mm aa'\n          id='time-only-picker'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setTime(date)}\n          customInput={<CustomInput label='Time Only' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          showTimeSelect\n          timeFormat='HH:mm'\n          timeIntervals={15}\n          selected={dateTime}\n          id='date-time-picker'\n          dateFormat='MM/dd/yyyy h:mm aa'\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setDateTime(date)}\n          customInput={<CustomInput label='Date & Time' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersTime\n"})}),ei=(0,a.jsx)("pre",{className:"language-jsx",children:(0,a.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\n\n// ** Third Party Imports\nimport subDays from 'date-fns/subDays'\nimport addDays from 'date-fns/addDays'\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker'\n\n// ** Types\nimport { DateType } from 'src/types/forms/reactDatepickerTypes'\n\n// ** Custom Component Imports\nimport CustomInput from './PickersCustomInput'\n\nconst PickersMinMax = ({ popperPlacement }: { popperPlacement: ReactDatePickerProps['popperPlacement'] }) => {\n  // ** States\n  const [minDate, setMinDate] = useState<DateType>(new Date())\n  const [maxDate, setMaxDate] = useState<DateType>(new Date())\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }} className='demo-space-x'>\n      <div>\n        <DatePicker\n          id='min-date'\n          selected={minDate}\n          minDate={subDays(new Date(), 5)}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setMinDate(date)}\n          customInput={<CustomInput label='Min Date' />}\n        />\n      </div>\n      <div>\n        <DatePicker\n          id='max-date'\n          selected={maxDate}\n          maxDate={addDays(new Date(), 5)}\n          popperPlacement={popperPlacement}\n          onChange={(date: Date) => setMaxDate(date)}\n          customInput={<CustomInput label='Max Date' />}\n        />\n      </div>\n    </Box>\n  )\n}\n\nexport default PickersMinMax\n"})}),em=(0,p.ZP)(r())(e=>{let{theme:t}=e;return{textDecoration:"none",color:t.palette.primary.main}}),eu=()=>{let e=(0,c.Z)(),{direction:t}=e,n="ltr"===t?"bottom-start":"bottom-end";return(0,a.jsx)(m.Z,{children:(0,a.jsxs)(o.ZP,{container:!0,spacing:6,children:[(0,a.jsx)(d.Z,{subtitle:(0,a.jsx)(l.Z,{variant:"body2",children:"A simple and reusable datepicker component for React"}),title:(0,a.jsx)(l.Z,{variant:"h5",children:(0,a.jsx)(em,{href:"https://github.com/Hacker0x01/react-datepicker/",target:"_blank",children:"React DatePicker"})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Date Pickers",code:{tsx:ea,jsx:U},children:(0,a.jsx)(f,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Time Pickers",code:{tsx:ed,jsx:K},children:(0,a.jsx)(y,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Min & Max Pickers",code:{tsx:ei,jsx:q},children:(0,a.jsx)(j,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Date Range Pickers",code:{tsx:er,jsx:$},children:(0,a.jsx)(C,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Specific Range",code:{tsx:eo,jsx:V},children:(0,a.jsx)(H,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Callbacks",code:{tsx:ec,jsx:Q},children:(0,a.jsx)(Z,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Customization",code:{tsx:ee,jsx:_},children:(0,a.jsx)(O,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Include Exclude",code:{tsx:et,jsx:J},children:(0,a.jsx)(W,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Locale",code:{tsx:en,jsx:z},children:(0,a.jsx)(B,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Month & Year Dropdowns",code:{tsx:el,jsx:A},children:(0,a.jsx)(L,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Month, Year & Quarter",code:{tsx:ep,jsx:X},children:(0,a.jsx)(E,{popperPlacement:n})})}),(0,a.jsx)(o.ZP,{item:!0,xs:12,children:(0,a.jsx)(i.Z,{title:"Options",code:{tsx:es,jsx:G},children:(0,a.jsx)(R,{popperPlacement:n})})})]})})};var eD=eu},92313:function(e,t,n){"use strict";var a=n(85893),s=n(67294),r=n(50135);let o=(0,s.forwardRef)((e,t)=>{let{...n}=e,{label:s,readOnly:o,style:p}=n;return(0,a.jsx)(r.Z,{inputRef:t,...n,...p&&{style:p},label:s||"",...o&&{inputProps:{readOnly:!0}}})});t.Z=o}},function(e){e.O(0,[4386,5511,3863,9198,3994,2229,9774,2888,179],function(){return e(e.s=17130)}),_N_E=e.O()}]);